buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.1'
        classpath 'io.fabric.tools:gradle:1.+'
        classpath 'com.google.gms:google-services:3.0.0'
    }
}

plugins {
    id "com.mendhak.gradlecrowdin" version "0.0.5"
}

//Load API Key information in from property file
Properties props = new Properties()
try {
    props.load(file('fabric.properties').newDataInputStream())
} catch (Exception ex) {
    throw new GradleException("Missing fabric.properties, check the fabric.properties.sample file.");
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    mavenCentral()
    jcenter()
    maven {
        url "https://dl.bintray.com/mendhak/maven"
    }
    maven { url 'https://maven.fabric.io/public' }

}

android {
    signingConfigs {
        release_config {
            keyAlias 'mjhram'
            keyPassword 'passinto'
            storeFile file('d:/Downloads/Android/keystore/keystore2')
            storePassword 'passinto'
        }
        config {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storeFile file('C:/Users/mohammad.haider/.android/debug.keystore')
            storePassword 'android'
        }
    }



     /*gradle.taskGraph.whenReady { taskGraph ->
        if(taskGraph.hasTask(':geodata:assembleRelease')) {

            def pass = ''
            if(System.console() == null) {
                new SwingBuilder().edt {
                    dialog(modal: true, // Otherwise the build will continue running before you closed the dialog
                            title: 'Enter password', // Dialog title
                            alwaysOnTop: true, // pretty much what the name says
                            resizable: false, // Don't allow the user to resize the dialog
                            locationRelativeTo: null, // Place dialog in center of the screen
                            pack: true, // We need to pack the dialog (so it will take the size of it's children)
                            show: true // Let's show it
                    ) {
                        vbox { // Put everything below each other
                            label(text: "Please enter key passphrase:")
                            input = passwordField()
                            button(defaultButton: true, text: 'OK', actionPerformed: {
                                pass = input.password; // Set pass variable to value of input field
                                dispose(); // Close dialog
                            })
                        } // vbox end
                    } // dialog end
                } // edt end
            } else {
                pass = System.console().readPassword("\nPlease enter key passphrase: ")
                pass = new String(pass)
            }

            if(pass.size() <= 0) {
                throw new InvalidUserDataException("You must enter a password to proceed.")
            }

            // -----
            // Do what you need to do with pass here!
            // -----
            android.signingConfigs.release_config.storePassword = pass
            android.signingConfigs.release_config.keyPassword = pass
            println "The password is: " + System.getProperty("pass")

        } // end if has task
    } // end whenReady
    */



    compileSdkVersion 23
    buildToolsVersion "23.0.1"
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 19
        versionName '1.9'
        applicationId 'com.mjhram.geodata'
        signingConfig signingConfigs.config
        versionCode 19
    }
    //Adding API keys to BuildConfig

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release_config
        }
        debug {
            signingConfig signingConfigs.config
        }
    }
    //Bug: http://stackoverflow.com/a/20675331
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
    lintOptions {
        abortOnError false
    }
    sourceSets {
        androidTest.setRoot('src/test')
    }
    //Release signing key
    if (project.hasProperty("RELEASE_STORE_FILE")) {
        signingConfigs {
            release {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }

        buildTypes {
            release {
                signingConfig signingConfigs.release
            }
        }
    }
    //Copies final APK to this directory
    /*assembleRelease.doLast {
        copy {
            from "build/outputs/apk/geodata-release.apk"
            into "./"

            // Use a closure to map the file name
            rename { String fileName ->
                fileName.replace('release', android.defaultConfig.versionName)
            }
        }
    }*/
    //Predexing libraries takes up too much memory and causes travis-ci to choke
    dexOptions {
        preDexLibraries = false
    }
    productFlavors {
    }
}

dependencies {
    compile 'com.android.support:support-v4:23.0.1'
    compile 'com.android.support:appcompat-v7:23.0.1'
    compile 'com.android.support:design:23.0.1'
    //compile 'com.google.android.gms:play-services-gcm:9.2.0'//8.1.0'
    compile 'com.google.android.gms:play-services-maps:9.2.0'
    compile 'com.google.android.gms:play-services-location:9.2.0'
    //use Firebase messaging instead of GCM messaging
    compile 'com.google.firebase:firebase-messaging:9.2.0'
    compile 'com.google.firebase:firebase-core:9.2.0'
    //compile 'com.github.ac-opensource:MarkerBuilder:v1.0.0'
    // compile 'com.google.android.gms:play-services-drive:7.5.0'
    //compile 'commons-net:commons-net:2.0' //for 'ftp' upload
    /*compile('org.apache.httpcomponents:httpmime:4.0.3') {
                                                                                                    exclude module: 'commons-logging'
                                                                                                    exclude module: 'httpcore'
                                                                                                    exclude module: 'httpclient'
                                                                                                }
                                                                                                compile('org.apache.james:apache-mime4j:0.6.1') {
                                                                                                    exclude module: 'commons-logging'
                                                                                                }*/
    /*compile('oauth.signpost:signpost-commonshttp4:1.2.1.1') {
                                                                                                    exclude module: 'commons-logging'
                                                                                                    exclude module: 'httpcore'
                                                                                                    exclude module: 'httpclient'
                                                                                                }
                                                                                                compile('oauth.signpost:signpost-core:1.2.1.1') {
                                                                                                    exclude module: 'commons-codec'
                                                                                                }*/
    //compile 'com.googlecode.json-simple:json-simple:1.1'
    //Logging
    compile 'org.slf4j:slf4j-api:1.7.6'
    compile 'com.github.tony19:logback-android-classic:1.1.1-4'
    compile 'com.github.tony19:logback-android-core:1.1.1-4'
    //Android lollipop/material features including the Toolbar
    //Cardviews
    //compile 'com.android.support:cardview-v7:22.+'
    //Material dialogs
    //compile 'com.afollestad:material-dialogs:0.7.9.1'
    compile 'com.afollestad.material-dialogs:core:0.9.0.1'
    compile 'com.afollestad.material-dialogs:commons:0.9.0.1'
    //The material drawer
    compile 'com.heinrichreimersoftware.materialdrawer:library:2.1'
    //Progress button
    //compile 'com.github.dmytrodanylyk.android-process-button:library:1.0.0' //button with progressbar
    //Android Priority Jobqueue
    compile 'com.birbit:android-priority-jobqueue:1.3.1'
    //Event bus
    compile 'de.greenrobot:eventbus:2.4.0'
    //Expandable textview in the FAQ
    compile 'com.ms-square:expandableTextView:0.1.4'
    compile files('libs/volley.jar')
    //compile 'com.yalantis:phoenix:1.2.3'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }
    compile project(':geofencemarkerbuilder')
}

tasks.whenTaskAdded { task ->
    //Don't run lint. Takes too long.
    if (task.name.contains("lint")) {
        task.enabled = false
    }

    if (task.name.contains("test")) {
        task.enabled = false
    }
}

//Download translations from Crowdin
if (project.hasProperty("CROWDIN_API_KEY")) {
    crowdinDownload {
        apiKey = CROWDIN_API_KEY
        destination = "$projectDir/src/main/res"
        projectId = 'geodata-for-android'

        //Android projects
        renameMapping = [
                from: '^([^-]*)/(.*)$',
                to  : /values-\1\/\2/
        ]

        excludePattern = '**/*.txt'
    }

    crowdinDownload {
        apiKey = CROWDIN_API_KEY
        destination = "$projectDir/src/main/res"
        projectId = 'geodata-for-android'

        //Android projects
        renameMapping = [
                from: '^([^-]*)-([^-]*)/(.*)$',
                to  : /values-\1-r\2\/\3/
        ]

        excludePattern = '**/*.txt'
    }

    crowdinUpload {
        apiKey = CROWDIN_API_KEY
        projectId = 'geodata-for-android'
        sourceFile = "$projectDir/src/main/res/values/strings.xml"
    }

    crowdinUpload {
        apiKey = CROWDIN_API_KEY
        projectId = 'geodata-for-android'
        sourceFile = "$projectDir/src/main/res/values/strings_faq.xml"
    }
}
//needed by Firebase messaging
apply plugin: 'com.google.gms.google-services'